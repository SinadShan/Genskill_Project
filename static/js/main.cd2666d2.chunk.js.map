{"version":3,"sources":["Auth.js","card.js","addRem.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","props","class","id","method","type","required","name","placeholder","htmlFor","hidden","onClick","do","value","toggleSignup","markAsCompleted","event","reminder","target","parentElement","children","innerHTML","style","textDecoration","Card","className","deleteRem","fontSize","disabled","AddReminder","autocomplete","cancel","submit","addRem","App","submitForm","bind","toggleAddReminder","submitNewReminder","cancelAdd","deleteReminder","logout","state","isLoggedin","response","user","innerText","document","getElementById","removeAttribute","getElementsByClassName","setAttribute","preventDefault","form","getElementsByTagName","data","FormData","plainFormData","Object","fromEntries","entries","JSONdata","JSON","stringify","fetch","headers","body","then","resp","json","setState","username","alert","this","localStorage","setItem","plainData","console","log","getItem","padding","backgroundColor","marginBottom","color","display","reminders","map","item","i","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cd2666d2.chunk.js","sourcesContent":["import './App.css';\n\n\nfunction LoginForm(props){\n    return(\n        <div class=\"container\">\n            <div class=\"row justify-content-center d-flex flex-column min-vh-100 align-items-center\">\n                <div class=\"col-sm-9 col-lg-6 contact-form justify-content-center\">\n                    \n                    <h2 id='heading'>Login</h2>\n                    <div class=\"row justify-content-center text-center\">\n\n                            <form method=\"post\">\n                                <div class=\"form-group form-floating\">\n                                    <input type=\"text\" required name=\"username\" class=\"form-control username\" placeholder=\"Username\" />\n                                    <label htmlFor=\"username\">Username</label>\n                                </div>\n                                <div class=\"form-group form-floating\">\n                                    <input type=\"password\" required name=\"password\" class=\"form-control password\" placeholder=\"Enter the password\" />\n                                    <label htmlFor=\"password\">Password</label>\n                                </div>\n\n                                <span>\n                                    <div class=\"form-group form-floating\" hidden='true' id=\"signup-password\">\n                                        <input type=\"password\" name=\"password-again\" class=\"form-control\" placeholder=\"Enter the password again\" />\n                                        <label htmlFor=\"password\">Repeat Password</label>\n                                    </div>\n                                </span>\n\n                                <span>\n                                    <div class=\"form-group \">\n                                        <input type=\"submit\" onClick={props.do} name=\"btnSubmit\" class=\"btnContact\" value=\"Submit\" />\n                                        <br/>\n                                        <span class=\"text-muted\">Don't have an account?  </span><a id=\"signup-link\" onClick={props.toggleSignup}>Signup</a>\n                                    </div>\n                                </span>\n\n                            </form>\n                            \n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default LoginForm","\nimport './card.css'\n\nfunction markAsCompleted(event){\n    let reminder = event.target.parentElement.children[0].children[0]\n    if(event.target.innerHTML==='Mark as completed'){\n        event.target.innerHTML='Unmark'\n        reminder.style.textDecoration='line-through'\n    }\n    else{\n        event.target.innerHTML='Mark as completed'\n        reminder.style.textDecoration='None'\n    }\n}\n\nfunction Card(props){\n    \n    return (\n        <div className=\"col-4\">\n            <div className=\"card\">\n                <div className=\"card-body d-flex flex-column\">\n                    <div className=\"row justify-content-end\">\n                        <div className=\"col-2\">\n                            <i className=\"bi bi-x\" onClick={props.deleteRem}/>\n                        </div>\n                    </div>\n                    <div className=\"row align-middle\">\n                        {/* <h5 className=\"card-title\">Reminder</h5> */}\n                        <p style={{fontSize:'1.25rem'}} className=\"card-text\">{props.reminder[1]}</p>\n                        <form method=\"post\">\n                            <div className=\"form-group\">\n                                <input type=\"text\" style={{fontSize:'1.5rem'}} disabled name=\"reminder\" className=\"form-control\" value= {props.reminder[0]} />\n                            </div>\n                            <p className=\"text-muted\" onClick={markAsCompleted}>Mark as completed</p>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Card","\nimport './card.css'\n\nexport default function AddReminder(props){\n    return(\n        <div className=\"col-4\">\n                <div className=\"card\">\n                    <div className=\"card-body d-flex justify-content-center align-items-center\">\n                        <div className=\"row\">\n                            <h5 className=\"card-title\">Stay Productive!</h5>\n                            <form hidden id=\"new-reminder-form\">\n                                <div className=\"form-group\">\n                                    <input type=\"date\" name=\"date\" className=\"form-control new-reminder-req datepicker\" placeholder=\"Date\"/>\n                                    <input type=\"text\" name=\"reminder\" className=\"form-control new-reminder-req\" autocomplete='off' placeholder=\"Reminder\"/>\n                                    <div className=\"row\">\n                                        <div className=\"col-6\">\n                                            <input type=\"button\" id=\"cancel\" className=\"form-control btn btn-primary\" onClick={props.cancel} value=\"Cancel\"/>\n                                        </div>\n                                        <div className=\"col-6\">\n                                            <input type=\"submit\" onClick={props.submit} className=\"form-control btn btn-primary\" value=\"Submit\"/>\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                            \n                            <a  id=\"new-reminder\" className=\"btn btn-primary\" onClick={props.addRem}>Add a Reminder</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n    )\n}","import React from 'react';\nimport LoginForm from './Auth';\nimport Card from './card'\nimport './App.css';\nimport AddReminder from './addRem';\n\nclass App extends React.Component{\n    constructor(props){\n        super(props);\n        // this.response = null\n        \n        this.submitForm = this.submitForm.bind(this);\n        this.toggleSignup = this.toggleSignup.bind(this);\n        this.toggleAddReminder = this.toggleAddReminder.bind(this);\n        this.submitNewReminder = this.submitNewReminder.bind(this);\n        this.cancelAdd = this.cancelAdd.bind(this);\n        this.deleteReminder = this.deleteReminder.bind(this);\n        this.logout = this.logout.bind(this)\n\n        this.state = {\n            isLoggedin: false,\n            response: null,\n            user: null\n        }\n    }\n    \n    toggleSignup(event){\n        if(event.target.innerText === 'Signup'){\n            document.getElementById('signup-password').removeAttribute('hidden')\n            document.getElementsByClassName('text-muted')[0].setAttribute('hidden','true')\n        \n            \n            document.getElementById('signup-password').children[0].setAttribute('required','true')\n            document.getElementById('heading').innerText = 'Signup'\n            document.getElementById('signup-link').innerText = 'Login'\n        }\n        else{\n            document.getElementById('signup-password').setAttribute('hidden','true')\n            document.getElementsByClassName('text-muted')[0].removeAttribute('hidden')\n            // document.getElementById('signup-password-label').setAttribute('hidden','true')\n            document.getElementById('signup-password').children[0].removeAttribute('required')\n            // console.log(this.attributes)\n            document.getElementById('heading').innerText = 'Login'\n            document.getElementById('signup-link').innerText = 'Signup'\n        }\n        \n    }\n\n    submitForm(event){\n            event.preventDefault()\n            let form = document.getElementsByTagName('form')[0]\n            \n            const data = new FormData(form)\n            const plainFormData = Object.fromEntries(data.entries());\n            // console.log(plainFormData)\n            const JSONdata = JSON.stringify(plainFormData)\n            if(document.getElementById('heading').innerText === 'Login'){\n                // login\n                fetch('http://localhost:5000/login',{\n                  method: 'POST',\n                  headers:{'Content-Type': 'application/json'},\n                  body: JSONdata,\n                }).then(resp => resp.json().then(\n                  data =>{\n                      if (data){\n                            this.setState({response: data})\n                            this.setState({isLoggedin: true})\n                            this.setState({user: plainFormData.username})\n                            // localStorage.setItem('response',JSON.stringify(data))\n                      }\n                      else{\n                          alert('Invalid username or password')\n                      }\n                  }))\n            }\n            else{\n                // signup\n                fetch('http://localhost:5000/signup',{\n                  method: 'POST',\n                  headers: {'Content-Type': 'application/json'},\n                  body: JSONdata\n                }).then(resp => resp.json().then(\n                  data => {\n                    if (data){\n                        this.setState({response: data})\n                        this.setState({isLoggedin: true})\n                        this.setState({user: plainFormData.username})\n\n                        // localStorage.setItem('response',JSON.stringify(data))\n                    }\n                    else{\n                        alert('Failed to sign-up')\n                    }\n                  }))\n            }\n    }\n\n    toggleAddReminder(event){\n        event.preventDefault()\n        document.getElementById('new-reminder-form').removeAttribute('hidden')\n        document.getElementById('cancel').removeAttribute('hidden')\n        document.getElementsByClassName('new-reminder-req')[0].setAttribute('required','')\n        document.getElementsByClassName('new-reminder-req')[1].setAttribute('required','')\n        document.getElementById('new-reminder').hidden = 'true'\n    }\n\n    submitNewReminder(event){\n        event.preventDefault()\n        let form = document.getElementById('new-reminder-form')\n        const data = new FormData(form)\n        let plainFormData = Object.fromEntries(data.entries());\n        plainFormData.username=this.state.user\n        const JSONdata = JSON.stringify(plainFormData)\n        // console.log(plainFormData)\n\n        fetch('http://localhost:5000/addrem',{\n            method: 'POST',\n            headers:{'Content-Type': 'application/json'},\n            body: JSONdata,\n        }).then(resp => resp.json().then(data =>{\n                if (data){\n                    this.setState({response: data},function(){\n                        localStorage.setItem('response',JSON.stringify(data))\n                        this.cancelAdd()\n                        document.getElementsByClassName('new-reminder-req')[0].value=''\n                        document.getElementsByClassName('new-reminder-req')[1].value=''\n                    })\n                }\n            }))\n        \n        \n\n    }\n\n    cancelAdd(){\n        document.getElementById('new-reminder-form').hidden = 'true'\n        document.getElementById('new-reminder').removeAttribute('hidden')\n        document.getElementsByClassName('new-reminder-req')[0].removeAttribute('required')\n        document.getElementsByClassName('new-reminder-req')[1].removeAttribute('required')\n        document.getElementById('cancel').hidden = 'true'\n        document.getElementsByClassName('new-reminder-req')[0].value=''\n        document.getElementsByClassName('new-reminder-req')[1].value=''\n    }\n\n    deleteReminder(event){\n        // let form = event.target.parentElement.parentElement.parentElement.children[1].children[1]\n        // const data = new FormData(form)\n        let plainData = {};\n        plainData['reminder']=event.target.parentElement.parentElement.parentElement.children[1].children[1].children[0].children[0].value\n        plainData['date']= event.target.parentElement.parentElement.parentElement.children[1].children[0].innerText\n        plainData.username=this.state.user\n        console.log(plainData)\n        const JSONdata = JSON.stringify(plainData)\n    \n        fetch('http://localhost:5000/deleteRem',{\n                method: 'POST',\n                headers:{'Content-Type': 'application/json'},\n                body: JSONdata,\n            }).then(resp => resp.json().then(data =>{\n                if (data){\n                    this.setState({response: data})\n                }\n            }))\n    }\n\n    logout(){\n        this.setState({isLoggedin:false})\n        this.setState({user:null})\n        this.setState({response: null})\n    }\n\n\n    render(){\n        if (this.state.isLoggedin===false && localStorage.getItem('response')!=null){\n            return(\n                <div>\n                    <LoginForm do={this.submitForm} toggleSignup={this.toggleSignup}/>\n                </div>\n            )\n        }\n        else{\n            return(\n                <div className=\"container-fluid\" style={{padding: '0'}}>\n                    <div className=\"header align-middle\" style={{backgroundColor:'#36373f', padding:'15px 15px 15px 30px', marginBottom: '10px'}}>\n                        <h1 style={{color: 'white', display:'inline-block'}}>User: {this.state.user}</h1>\n                        <p className=\"logout text-muted\" onClick={this.logout}>Logout</p>\n                    </div>\n                    <div className='container' style={{padding: '0'}} >\n                        {/* <hr style={{height: '5px'}}/> */}\n                        <div className=\"row\" style={{padding: '10px'}}>\n                            {this.state.response.reminders?this.state.response.reminders.map((item,i=0) =>{\n                                    return <Card key={i++} reminder={item} deleteRem={this.deleteReminder}/>\n                                }\n                            ):null}\n                            <AddReminder addRem={this.toggleAddReminder} cancel={this.cancelAdd} submit={this.submitNewReminder}/>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n  );\n  \n\n// })\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}